buildscript {
    repositories {
        mavenCentral()
    }

}
apply plugin: 'com.android.model.application'

repositories {
    mavenCentral()

    maven {
        url "https://raw.github.com/embarkmobile/zxing-android-minimal/mvn-repo/maven-repository/"
    }
}

model {
    android {
        compileSdkVersion = 23
        buildToolsVersion = "24.0.1"

        defaultConfig.with {
            applicationId = "me.smartproxy"
            minSdkVersion.apiLevel = 14
            targetSdkVersion.apiLevel = 23
            versionCode = 7
            versionName = "1.6"
        }
    }

    android.ndk {
        moduleName "encryptor"
        ldLibs.add('log')
        cppFlags.add('-std=c++11')
        cppFlags.add('-fexceptions')
        cppFlags.add('-I' + file("src/main/jni/include"))
        cppFlags.add('-I' + file("src/main/jni/include/sodium"))
        cppFlags.add('-I' + file("src/main/jni/shadowsocks-libev/libsodium/src/libsodium/include"))
        cppFlags.add('-I' + file("src/main/jni/shadowsocks-libev/libsodium/src/libsodium/include/sodium"))
    }

    android.sources {
        main {
            jniLibs {
                source {
                    srcDir 'src/main/libs'
                }
            }
        }
    }

    android.signingConfigs {
        create("release") {
            storeFile = file("[android.keystore]")
            storePassword =  System.getenv("KSTOREPWD")
            keyAlias = "[smartproxy]"
            keyPassword = System.getenv("KEYPWD")
        }
    }

    android.buildTypes {
        release {
            shrinkResources = true
            useProguard = true
//            proguardFiles.add(getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
//            signingConfigs = signingConfigs.release
        }
    }
    
    lintOptions {
        abortOnError false
    }
}

task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
    commandLine "ndk-build", '-C', file('src/main/jni').absolutePath
}

task cleanNative(type: Exec, description: 'Clean JNI object files') {
    commandLine "ndk-build", '-C', file('src/main/jni').absolutePath, 'clean'
}

clean.dependsOn 'cleanNative'

tasks.all { task ->
    if (task.name.startsWith('compile') && task.name.contains('MainC')) {
        task.enabled = false
    }
    if (task.name.startsWith('link')) {
        task.enabled = false
    }
    if (task.name.endsWith('SharedLibrary')) {
        task.dependsOn buildNative
    }
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn buildNative
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.embarkmobile:zxing-android-minimal:2.0.0@aar'
    compile 'com.embarkmobile:zxing-android-integration:2.0.0@aar'
    compile "com.android.support:appcompat-v7:23.2.0"
    compile 'com.google.zxing:core:3.0.1'
    compile 'com.squareup.okhttp:okhttp:2.3.0'
}
